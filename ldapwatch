#!/bin/bash
if [[ -n "$VERBOSE" ]]; then
	set -x
fi

WORK_DIR=/run/ldapwatch
LOCK_FILE="$WORK_DIR/lock"
if [[ -f "$LOCK_FILE" ]]; then
	echo "Lock file $LOCK_FILE present, exiting." >&2
	exit 81 # not used in ldap.h
else
	touch "$LOCK_FILE"
fi

# print the file name for a given base at given URI
timestamp_filename() {
	URI_HASH="$(echo "$1" | sha1sum | cut -d ' ' -f 1)"
	BASE_HASH="$(echo "$2" | sha1sum | cut -d ' ' -f 1)"

	echo "$WORK_DIR/$URI_HASH/$BASE_HASH"
}

# print last known search time in LDAP generalized time format
get_last_timestamp() {
	BASE="$1"
	FILE_NAME="$(timestamp_filename "$URI" "$BASE")"
	DATE_FORMAT=%Y%m%d%H%M%SZ

	if [[ -f "$FILE_NAME" ]]; then
		date --utc --reference="$FILE_NAME" +$DATE_FORMAT
	else
		date --utc --date=@0 +$DATE_FORMAT
	fi
}

# update mtime on a file for given URI and base
update_timestamp() {
	BASE="$1"
	FILE_NAME="$(timestamp_filename "$URI" "$BASE")"
	mkdir -p "$(dirname "$FILE_NAME")"
	touch "$FILE_NAME"
}

# delete timestamp file if command failed: force run next time
delete_timestamp() {
	BASE="$1"
	FILE_NAME="$(timestamp_filename "$URI" "$BASE")"
	rm -f "$FILE_NAME"
}

# return 0 if subtree has been modified since last check
is_ldap_modified() {
	BASE="$1"
	TIMESTAMP=$(get_last_timestamp "$BASE")

	FOUND="$(ldapsearch -z 1 -LLL -x -H "$URI" -b "$BASE" \
		"(modifyTimestamp>=$TIMESTAMP)" dn 2>/dev/null)"

	CODE=$?
	if [[ $CODE -ne 0 && $CODE -ne 4 ]]; then
		echo "LDAP error $CODE returned by ldapsearch" >&2
		rm -f "$LOCK_FILE"
		exit $CODE
	fi

	if [[ -n "$FOUND" ]]; then
		return 0
	else
		return 1
	fi
}

# script body
if [[ $# -lt 3 ]]; then
	# show usage
	cat >&2 <<-EOF
	Usage: $0 URI BASE COMMAND [BASE COMMAND]...

	Execute command if elements in LDAP subtree have been modified.

	Arguments:
	URI     LDAP server(s) URI
	        Example: ldap://ldap.example.org
	BASE    distinguished name, base of the subtree search
	        Example: ou=people,dc=example,dc=org
	COMMAND executable and its arguments to run if change detected
	        Example: /bin/true --foo --bar
	EOF
	exit 82 # not used in ldap.h
fi

URI="$1"
shift

while true; do
	BASE="$1"
	COMMAND="$2"
	shift 2 || break

	if is_ldap_modified "$BASE"; then
		update_timestamp "$BASE"
		eval "$COMMAND" || delete_timestamp "$BASE"
	fi
done

rm -f "$LOCK_FILE"
exit 0
